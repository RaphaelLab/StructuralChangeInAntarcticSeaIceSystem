> # This is the code for recreating the dynamic ARMA fits
> # in Nature manuscript 2023-07-12845A
> #
> # "A Twenty-First Century Structural Change in Antarctica’s Sea ice System"
> #  by Marilyn N. Raphael, Thomas J. Maierhofer, Ryan L. Fogt, William R. Hobbs, and Mark S. Handcock
> #
> # These standard R packages need to be present (and can be installed via 'install.packages("scales")', etc.
> library(scales)
> library(ggplot2)
> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(tidyverse)
── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ stringr   1.5.1
✔ lubridate 1.9.4     ✔ tibble    3.2.1
✔ purrr     1.0.2     ✔ tidyr     1.3.1
✔ readr     2.1.5     
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ readr::col_factor() masks scales::col_factor()
✖ purrr::discard()    masks scales::discard()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::lag()        masks stats::lag()
ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors
> library(grid)
> library(gridExtra, warn.conflicts = FALSE)
> 
> library(rjags)
Loading required package: coda
Linked to JAGS 4.3.1
Loaded modules: basemod,bugs
> library(runjags, warn.conflicts = FALSE)
> 
> library(bayesplot)
This is bayesplot version 1.11.1
- Online documentation and vignettes at mc-stan.org/bayesplot
- bayesplot theme set to bayesplot::theme_default()
   * Does _not_ affect other ggplot2 plots
   * See ?bayesplot_theme_set for details on theme setting
> library(loo)
This is loo version 2.8.0
- Online documentation and vignettes at mc-stan.org/loo
- As of v2.0.0 loo defaults to 1 core but we recommend using as many as possible. Use the 'cores' argument or set options(mc.cores = NUM_CORES) for an entire session. 
> #
> #
> # First we read in the NSIDC sea ice extent data 
> # and the reconstructions of Maierhofer (2023) [See cite details in the manuscript]
> load(file="../Data/nsidcV4.RData")
> tempFile_location<- tempfile()
> download.file(url="https://ucla.box.com/shared/static/ip0wlp72fslp40o7vudnwfvfwcbmsmg2",
+               destfile=tempFile_location, method="wget", mode="rb")
--2025-02-07 00:29:24--  https://ucla.box.com/shared/static/ip0wlp72fslp40o7vudnwfvfwcbmsmg2
Resolving ucla.box.com (ucla.box.com)... 74.112.186.157
Connecting to ucla.box.com (ucla.box.com)|74.112.186.157|:443... connected.
HTTP request sent, awaiting response... 301 Moved Permanently
Location: /public/static/ip0wlp72fslp40o7vudnwfvfwcbmsmg2 [following]
--2025-02-07 00:29:25--  https://ucla.box.com/public/static/ip0wlp72fslp40o7vudnwfvfwcbmsmg2
Reusing existing connection to ucla.box.com:443.
HTTP request sent, awaiting response... 301 Moved Permanently
Location: https://ucla.app.box.com/public/static/ip0wlp72fslp40o7vudnwfvfwcbmsmg2 [following]
--2025-02-07 00:29:25--  https://ucla.app.box.com/public/static/ip0wlp72fslp40o7vudnwfvfwcbmsmg2
Resolving ucla.app.box.com (ucla.app.box.com)... 74.112.186.157
Connecting to ucla.app.box.com (ucla.app.box.com)|74.112.186.157|:443... connected.
HTTP request sent, awaiting response... 302 Found
Location: https://public.boxcloud.com/d/1/b1!TNIpM0hgvpNeB3wrhgtWzJMhqnWYqZAdzfflDbxerIew5F1x_tESFJO33NxOouT9YTPZ52g4KFBfY68XAOXuv73IT0fHgZhZsvNhbTjZls6vQYkDVTHSS-GSf9mdKjNeg5tmb-uV0ZYAisa16puk8pTF8QLd4wWX-V9d9OfnOpiIWLQ3Dci_Wh05VVWIcCudiZlM683T2F4221pZnH8x6fUagKE-4cCNL33K5zSO48jiDXhPrIzZTAf9mIXgSFfYp1Rd9f9FyhYsfiC0bnpnsrXsd-Mle4lnXVDBsJg-IpP532rDfDhVraMTVEClCmhPL92oIuBRLkUV7GF83xK-kmrDkGUyzIcU11lg6kEOtQl9GMi6PAO1Q2N2FMh1ZZFd3X_eItO9EwTi4vKTC71B8M1F_sArHotBDRU7zttDPIZ5pSY3Bray9EymIN230jjt-xI-dTFP_ioxZKC6phKHc8ZAGvqQYRErnAA-7NfLAQgvuRpME-ZYNK-_fRJ7X5NT62o4TGFO9Z3jSJu3AQuvm0dpGpABE-LNXNgFzybiW16qhVmUacUgJJfy6etY7RXqfTVGu3mOg2RC2egyEu19E31GTrUw9qhh7DCaB1I88yLveOgexuBO_CLUr_qVpMLBanEv8TlQjAFZ_PbzjD22mL1HbC1UaA_CtW3bxcUSvQNU2tX2ESYZsjktN99vv46JFoxRA77DIJq6fvd8724Mx_G4Vustd7NinKKC0fhrye9cB043_wTz8D4na1SwstGlVOZm8doalrM7bOkTHxAi00ptUXP_ovl_UI1JtjDzxGQkewM73zuEVMaia-FC_shLLkJfAwbsI40Y-DJmrp6onv2Zun5bRj46dpUszW6yCkPid68DWeS0AzpO1wB6xYoySsu4kA1NgP6GNbb0eIozrvQhgtFxDtaGisY-KcXt1pdlwFPiGw7qR0iWKrwwVZzpSnJepX9gv50BHkA2QDNrFk379C0U0DZ6DR8G8n1k8V0te5UVYlu7eUVaNgXlFJ5jJ2i0xyOe4WVkKTTIFybefgPikEEdQL1I9TYn7CAp5sL7Ec2vBqRovMbIIrsMMKooffc6WqNA1pW69Nb8iIT6-L96uwPTTzbCc7wDICRJZRklvUxZIG2543ejNZpqboyi9CEQVyUVR8Fmr1EJBB7ayVtTIjXYQ0fSUYjgZaF_jCCR5G9FRiybAnOuE1GKKF0W0_Qu8IDwWLEuIaM7u1kYfuoOvio0qWg9-_ENT1pzdIhIDDhNIzCHk-zGvxNjpKxt4KEhMi4y1qgXaYIW0j3P9LjHR9SIYw4EtCgh1AGdcxSw2tF6oDclCrbn-Jw_4pufDeLEtqgBL5CNkC3Wv_hdW_QPF6VOb5AmihOnVJUaDC6c0Z_Fd4UAxYW8KhNE1MPI9Uff3xz5llgU-tkZh73Ov3uhO9e1IkzczSt7QyA0yd5GUiRr8AI6erqxp1D9fICt1sPtqUNYtNkW8bDud1keA_-WvnZDpD811XrYRGKyKVUC-fxV_XkwO8r-3Fbr1H4lN4DE4GQa-pk0_PI./download [following]
--2025-02-07 00:29:26--  https://public.boxcloud.com/d/1/b1!TNIpM0hgvpNeB3wrhgtWzJMhqnWYqZAdzfflDbxerIew5F1x_tESFJO33NxOouT9YTPZ52g4KFBfY68XAOXuv73IT0fHgZhZsvNhbTjZls6vQYkDVTHSS-GSf9mdKjNeg5tmb-uV0ZYAisa16puk8pTF8QLd4wWX-V9d9OfnOpiIWLQ3Dci_Wh05VVWIcCudiZlM683T2F4221pZnH8x6fUagKE-4cCNL33K5zSO48jiDXhPrIzZTAf9mIXgSFfYp1Rd9f9FyhYsfiC0bnpnsrXsd-Mle4lnXVDBsJg-IpP532rDfDhVraMTVEClCmhPL92oIuBRLkUV7GF83xK-kmrDkGUyzIcU11lg6kEOtQl9GMi6PAO1Q2N2FMh1ZZFd3X_eItO9EwTi4vKTC71B8M1F_sArHotBDRU7zttDPIZ5pSY3Bray9EymIN230jjt-xI-dTFP_ioxZKC6phKHc8ZAGvqQYRErnAA-7NfLAQgvuRpME-ZYNK-_fRJ7X5NT62o4TGFO9Z3jSJu3AQuvm0dpGpABE-LNXNgFzybiW16qhVmUacUgJJfy6etY7RXqfTVGu3mOg2RC2egyEu19E31GTrUw9qhh7DCaB1I88yLveOgexuBO_CLUr_qVpMLBanEv8TlQjAFZ_PbzjD22mL1HbC1UaA_CtW3bxcUSvQNU2tX2ESYZsjktN99vv46JFoxRA77DIJq6fvd8724Mx_G4Vustd7NinKKC0fhrye9cB043_wTz8D4na1SwstGlVOZm8doalrM7bOkTHxAi00ptUXP_ovl_UI1JtjDzxGQkewM73zuEVMaia-FC_shLLkJfAwbsI40Y-DJmrp6onv2Zun5bRj46dpUszW6yCkPid68DWeS0AzpO1wB6xYoySsu4kA1NgP6GNbb0eIozrvQhgtFxDtaGisY-KcXt1pdlwFPiGw7qR0iWKrwwVZzpSnJepX9gv50BHkA2QDNrFk379C0U0DZ6DR8G8n1k8V0te5UVYlu7eUVaNgXlFJ5jJ2i0xyOe4WVkKTTIFybefgPikEEdQL1I9TYn7CAp5sL7Ec2vBqRovMbIIrsMMKooffc6WqNA1pW69Nb8iIT6-L96uwPTTzbCc7wDICRJZRklvUxZIG2543ejNZpqboyi9CEQVyUVR8Fmr1EJBB7ayVtTIjXYQ0fSUYjgZaF_jCCR5G9FRiybAnOuE1GKKF0W0_Qu8IDwWLEuIaM7u1kYfuoOvio0qWg9-_ENT1pzdIhIDDhNIzCHk-zGvxNjpKxt4KEhMi4y1qgXaYIW0j3P9LjHR9SIYw4EtCgh1AGdcxSw2tF6oDclCrbn-Jw_4pufDeLEtqgBL5CNkC3Wv_hdW_QPF6VOb5AmihOnVJUaDC6c0Z_Fd4UAxYW8KhNE1MPI9Uff3xz5llgU-tkZh73Ov3uhO9e1IkzczSt7QyA0yd5GUiRr8AI6erqxp1D9fICt1sPtqUNYtNkW8bDud1keA_-WvnZDpD811XrYRGKyKVUC-fxV_XkwO8r-3Fbr1H4lN4DE4GQa-pk0_PI./download
Resolving public.boxcloud.com (public.boxcloud.com)... 74.112.186.165
Connecting to public.boxcloud.com (public.boxcloud.com)|74.112.186.165|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: 14748457 (14M) [application/octet-stream]
Saving to: ‘/Users/handcock/tmp/RtmpfOnA8K/filee63748f3bd19’

     0K .......... .......... .......... .......... ..........  0%  224K 64s
    50K .......... .......... .......... .......... ..........  0%  313K 55s
   100K .......... .......... .......... .......... ..........  1%  656K 44s
   150K .......... .......... .......... .......... ..........  1%  617K 38s
   200K .......... .......... .......... .......... ..........  1%  756K 34s
   250K .......... .......... .......... .......... ..........  2%  975K 31s
   300K .......... .......... .......... .......... ..........  2% 1.20M 28s
   350K .......... .......... .......... .......... ..........  2% 1.29M 26s
   400K .......... .......... .......... .......... ..........  3% 1.29M 24s
   450K .......... .......... .......... .......... ..........  3% 1.42M 22s
   500K .......... .......... .......... .......... ..........  3% 1.87M 21s
   550K .......... .......... .......... .......... ..........  4% 1.56M 20s
   600K .......... .......... .......... .......... ..........  4% 2.08M 19s
   650K .......... .......... .......... .......... ..........  4% 2.35M 18s
   700K .......... .......... .......... .......... ..........  5% 2.37M 17s
   750K .......... .......... .......... .......... ..........  5% 2.53M 16s
   800K .......... .......... .......... .......... ..........  5% 2.81M 15s
   850K .......... .......... .......... .......... ..........  6% 2.92M 15s
   900K .......... .......... .......... .......... ..........  6% 3.00M 14s
   950K .......... .......... .......... .......... ..........  6% 2.70M 14s
  1000K .......... .......... .......... .......... ..........  7% 3.20M 13s
  1050K .......... .......... .......... .......... ..........  7% 3.97M 13s
  1100K .......... .......... .......... .......... ..........  7% 3.54M 12s
  1150K .......... .......... .......... .......... ..........  8% 3.83M 12s
  1200K .......... .......... .......... .......... ..........  8% 4.42M 11s
  1250K .......... .......... .......... .......... ..........  9% 3.94M 11s
  1300K .......... .......... .......... .......... ..........  9% 4.76M 11s
  1350K .......... .......... .......... .......... ..........  9% 3.58M 10s
  1400K .......... .......... .......... .......... .......... 10% 4.45M 10s
  1450K .......... .......... .......... .......... .......... 10% 5.19M 10s
  1500K .......... .......... .......... .......... .......... 10% 4.79M 10s
  1550K .......... .......... .......... .......... .......... 11% 5.16M 9s
  1600K .......... .......... .......... .......... .......... 11% 5.31M 9s
  1650K .......... .......... .......... .......... .......... 11% 5.86M 9s
  1700K .......... .......... .......... .......... .......... 12% 5.65M 9s
  1750K .......... .......... .......... .......... .......... 12% 4.65M 8s
  1800K .......... .......... .......... .......... .......... 12% 8.62M 8s
  1850K .......... .......... .......... .......... .......... 13% 4.33M 8s
  1900K .......... .......... .......... .......... .......... 13% 6.58M 8s
  1950K .......... .......... .......... .......... .......... 13% 7.01M 8s
  2000K .......... .......... .......... .......... .......... 14% 5.96M 7s
  2050K .......... .......... .......... .......... .......... 14% 7.68M 7s
  2100K .......... .......... .......... .......... .......... 14% 7.50M 7s
  2150K .......... .......... .......... .......... .......... 15% 7.38M 7s
  2200K .......... .......... .......... .......... .......... 15% 7.44M 7s
  2250K .......... .......... .......... .......... .......... 15% 5.59M 7s
  2300K .......... .......... .......... .......... .......... 16% 7.93M 7s
  2350K .......... .......... .......... .......... .......... 16% 7.93M 6s
  2400K .......... .......... .......... .......... .......... 17% 8.66M 6s
  2450K .......... .......... .......... .......... .......... 17% 6.50M 6s
  2500K .......... .......... .......... .......... .......... 17% 7.71M 6s
  2550K .......... .......... .......... .......... .......... 18% 10.6M 6s
  2600K .......... .......... .......... .......... .......... 18% 8.68M 6s
  2650K .......... .......... .......... .......... .......... 18% 7.93M 6s
  2700K .......... .......... .......... .......... .......... 19% 8.52M 6s
  2750K .......... .......... .......... .......... .......... 19% 11.5M 6s
  2800K .......... .......... .......... .......... .......... 19% 8.64M 5s
  2850K .......... .......... .......... .......... .......... 20% 6.10M 5s
  2900K .......... .......... .......... .......... .......... 20% 14.7M 5s
  2950K .......... .......... .......... .......... .......... 20% 9.67M 5s
  3000K .......... .......... .......... .......... .......... 21% 9.55M 5s
  3050K .......... .......... .......... .......... .......... 21%  853K 5s
  3100K .......... .......... .......... .......... .......... 21% 9.19M 5s
  3150K .......... .......... .......... .......... .......... 22% 14.9M 5s
  3200K .......... .......... .......... .......... .......... 22% 14.9M 5s
  3250K .......... .......... .......... .......... .......... 22% 9.06M 5s
  3300K .......... .......... .......... .......... .......... 23% 11.9M 5s
  3350K .......... .......... .......... .......... .......... 23% 13.0M 5s
  3400K .......... .......... .......... .......... .......... 23% 13.0M 5s
  3450K .......... .......... .......... .......... .......... 24% 19.9M 5s
  3500K .......... .......... .......... .......... .......... 24% 9.60M 4s
  3550K .......... .......... .......... .......... .......... 24% 19.9M 4s
  3600K .......... .......... .......... .......... .......... 25% 9.50M 4s
  3650K .......... .......... .......... .......... .......... 25% 17.3M 4s
  3700K .......... .......... .......... .......... .......... 26% 1.14M 4s
  3750K .......... .......... .......... .......... .......... 26% 14.1M 4s
  3800K .......... .......... .......... .......... .......... 26% 20.0M 4s
  3850K .......... .......... .......... .......... .......... 27% 16.6M 4s
  3900K .......... .......... .......... .......... .......... 27% 21.3M 4s
  3950K .......... .......... .......... .......... .......... 27% 16.3M 4s
  4000K .......... .......... .......... .......... .......... 28% 21.7M 4s
  4050K .......... .......... .......... .......... .......... 28% 14.8M 4s
  4100K .......... .......... .......... .......... .......... 28% 12.3M 4s
  4150K .......... .......... .......... .......... .......... 29% 18.2M 4s
  4200K .......... .......... .......... .......... .......... 29% 20.4M 4s
  4250K .......... .......... .......... .......... .......... 29% 17.2M 4s
  4300K .......... .......... .......... .......... .......... 30%  563K 4s
  4350K .......... .......... .......... .......... .......... 30% 16.3M 4s
  4400K .......... .......... .......... .......... .......... 30% 22.7M 4s
  4450K .......... .......... .......... .......... .......... 31% 17.6M 4s
  4500K .......... .......... .......... .......... .......... 31% 23.3M 4s
  4550K .......... .......... .......... .......... .......... 31% 20.4M 3s
  4600K .......... .......... .......... .......... .......... 32% 20.0M 3s
  4650K .......... .......... .......... .......... .......... 32% 19.3M 3s
  4700K .......... .......... .......... .......... .......... 32% 14.1M 3s
  4750K .......... .......... .......... .......... .......... 33% 19.5M 3s
  4800K .......... .......... .......... .......... .......... 33% 26.1M 3s
  4850K .......... .......... .......... .......... .......... 34% 19.2M 3s
  4900K .......... .......... .......... .......... .......... 34%  831K 3s
  4950K .......... .......... .......... .......... .......... 34% 40.8M 3s
  5000K .......... .......... .......... .......... .......... 35% 20.6M 3s
  5050K .......... .......... .......... .......... .......... 35% 22.1M 3s
  5100K .......... .......... .......... .......... .......... 35% 13.2M 3s
  5150K .......... .......... .......... .......... .......... 36% 26.8M 3s
  5200K .......... .......... .......... .......... .......... 36% 21.7M 3s
  5250K .......... .......... .......... .......... .......... 36% 20.3M 3s
  5300K .......... .......... .......... .......... .......... 37% 19.6M 3s
  5350K .......... .......... .......... .......... .......... 37% 19.0M 3s
  5400K .......... .......... .......... .......... .......... 37% 21.1M 3s
  5450K .......... .......... .......... .......... .......... 38% 15.3M 3s
  5500K .......... .......... .......... .......... .......... 38% 20.6M 3s
  5550K .......... .......... .......... .......... .......... 38%  543K 3s
  5600K .......... .......... .......... .......... .......... 39% 15.0M 3s
  5650K .......... .......... .......... .......... .......... 39% 20.2M 3s
  5700K .......... .......... .......... .......... .......... 39% 16.2M 3s
  5750K .......... .......... .......... .......... .......... 40% 12.4M 3s
  5800K .......... .......... .......... .......... .......... 40% 63.9M 3s
  5850K .......... .......... .......... .......... .......... 40% 37.9M 3s
  5900K .......... .......... .......... .......... .......... 41% 16.9M 3s
  5950K .......... .......... .......... .......... .......... 41% 19.5M 3s
  6000K .......... .......... .......... .......... .......... 42% 16.2M 3s
  6050K .......... .......... .......... .......... .......... 42% 21.3M 3s
  6100K .......... .......... .......... .......... .......... 42% 15.4M 2s
  6150K .......... .......... .......... .......... .......... 43%  866K 3s
  6200K .......... .......... .......... .......... .......... 43% 14.7M 3s
  6250K .......... .......... .......... .......... .......... 43% 15.7M 2s
  6300K .......... .......... .......... .......... .......... 44% 27.2M 2s
  6350K .......... .......... .......... .......... .......... 44% 20.6M 2s
  6400K .......... .......... .......... .......... .......... 44% 15.5M 2s
  6450K .......... .......... .......... .......... .......... 45% 46.9M 2s
  6500K .......... .......... .......... .......... .......... 45% 16.7M 2s
  6550K .......... .......... .......... .......... .......... 45% 14.2M 2s
  6600K .......... .......... .......... .......... .......... 46% 20.8M 2s
  6650K .......... .......... .......... .......... .......... 46% 26.0M 2s
  6700K .......... .......... .......... .......... .......... 46% 18.3M 2s
  6750K .......... .......... .......... .......... .......... 47% 21.8M 2s
  6800K .......... .......... .......... .......... .......... 47%  539K 2s
  6850K .......... .......... .......... .......... .......... 47% 16.9M 2s
  6900K .......... .......... .......... .......... .......... 48% 25.4M 2s
  6950K .......... .......... .......... .......... .......... 48% 17.4M 2s
  7000K .......... .......... .......... .......... .......... 48% 16.5M 2s
  7050K .......... .......... .......... .......... .......... 49% 18.4M 2s
  7100K .......... .......... .......... .......... .......... 49% 15.8M 2s
  7150K .......... .......... .......... .......... .......... 49% 28.5M 2s
  7200K .......... .......... .......... .......... .......... 50% 21.7M 2s
  7250K .......... .......... .......... .......... .......... 50% 24.9M 2s
  7300K .......... .......... .......... .......... .......... 51% 17.7M 2s
  7350K .......... .......... .......... .......... .......... 51% 14.7M 2s
  7400K .......... .......... .......... .......... .......... 51%  865K 2s
  7450K .......... .......... .......... .......... .......... 52% 14.9M 2s
  7500K .......... .......... .......... .......... .......... 52% 21.9M 2s
  7550K .......... .......... .......... .......... .......... 52% 18.3M 2s
  7600K .......... .......... .......... .......... .......... 53% 22.6M 2s
  7650K .......... .......... .......... .......... .......... 53% 11.5M 2s
  7700K .......... .......... .......... .......... .......... 53% 55.2M 2s
  7750K .......... .......... .......... .......... .......... 54% 24.9M 2s
  7800K .......... .......... .......... .......... .......... 54% 21.1M 2s
  7850K .......... .......... .......... .......... .......... 54% 14.4M 2s
  7900K .......... .......... .......... .......... .......... 55% 19.3M 2s
  7950K .......... .......... .......... .......... .......... 55% 22.3M 2s
  8000K .......... .......... .......... .......... .......... 55% 25.1M 2s
  8050K .......... .......... .......... .......... .......... 56%  530K 2s
  8100K .......... .......... .......... .......... .......... 56% 20.6M 2s
  8150K .......... .......... .......... .......... .......... 56% 20.7M 2s
  8200K .......... .......... .......... .......... .......... 57% 16.9M 2s
  8250K .......... .......... .......... .......... .......... 57% 25.8M 2s
  8300K .......... .......... .......... .......... .......... 57% 20.8M 2s
  8350K .......... .......... .......... .......... .......... 58% 21.2M 2s
  8400K .......... .......... .......... .......... .......... 58% 17.5M 2s
  8450K .......... .......... .......... .......... .......... 59% 17.1M 2s
  8500K .......... .......... .......... .......... .......... 59% 20.2M 2s
  8550K .......... .......... .......... .......... .......... 59% 17.0M 2s
  8600K .......... .......... .......... .......... .......... 60% 27.4M 2s
  8650K .......... .......... .......... .......... .......... 60%  855K 2s
  8700K .......... .......... .......... .......... .......... 60% 15.6M 2s
  8750K .......... .......... .......... .......... .......... 61% 23.2M 1s
  8800K .......... .......... .......... .......... .......... 61% 20.9M 1s
  8850K .......... .......... .......... .......... .......... 61% 17.9M 1s
  8900K .......... .......... .......... .......... .......... 62% 17.3M 1s
  8950K .......... .......... .......... .......... .......... 62% 24.4M 1s
  9000K .......... .......... .......... .......... .......... 62% 18.4M 1s
  9050K .......... .......... .......... .......... .......... 63% 20.1M 1s
  9100K .......... .......... .......... .......... .......... 63% 18.5M 1s
  9150K .......... .......... .......... .......... .......... 63% 28.4M 1s
  9200K .......... .......... .......... .......... .......... 64% 18.1M 1s
  9250K .......... .......... .......... .......... .......... 64% 19.1M 1s
  9300K .......... .......... .......... .......... .......... 64%  541K 1s
  9350K .......... .......... .......... .......... .......... 65% 11.8M 1s
  9400K .......... .......... .......... .......... .......... 65% 24.9M 1s
  9450K .......... .......... .......... .......... .......... 65% 17.3M 1s
  9500K .......... .......... .......... .......... .......... 66% 24.8M 1s
  9550K .......... .......... .......... .......... .......... 66% 21.2M 1s
  9600K .......... .......... .......... .......... .......... 67% 17.1M 1s
  9650K .......... .......... .......... .......... .......... 67% 25.6M 1s
  9700K .......... .......... .......... .......... .......... 67% 20.6M 1s
  9750K .......... .......... .......... .......... .......... 68% 14.8M 1s
  9800K .......... .......... .......... .......... .......... 68% 16.9M 1s
  9850K .......... .......... .......... .......... .......... 68% 27.1M 1s
  9900K .......... .......... .......... .......... .......... 69%  856K 1s
  9950K .......... .......... .......... .......... .......... 69% 8.86M 1s
 10000K .......... .......... .......... .......... .......... 69% 58.1M 1s
 10050K .......... .......... .......... .......... .......... 70% 23.5M 1s
 10100K .......... .......... .......... .......... .......... 70% 7.89M 1s
 10150K .......... .......... .......... .......... .......... 70% 89.3M 1s
 10200K .......... .......... .......... .......... .......... 71%  112M 1s
 10250K .......... .......... .......... .......... .......... 71% 21.8M 1s
 10300K .......... .......... .......... .......... .......... 71% 13.9M 1s
 10350K .......... .......... .......... .......... .......... 72% 8.32M 1s
 10400K .......... .......... .......... .......... .......... 72% 34.2M 1s
 10450K .......... .......... .......... .......... .......... 72% 80.7M 1s
 10500K .......... .......... .......... .......... .......... 73%  541K 1s
 10550K .......... .......... .......... .......... .......... 73% 25.9M 1s
 10600K .......... .......... .......... .......... .......... 73% 16.5M 1s
 10650K .......... .......... .......... .......... .......... 74% 25.4M 1s
 10700K .......... .......... .......... .......... .......... 74% 15.3M 1s
 10750K .......... .......... .......... .......... .......... 74% 16.2M 1s
 10800K .......... .......... .......... .......... .......... 75% 31.3M 1s
 10850K .......... .......... .......... .......... .......... 75% 16.9M 1s
 10900K .......... .......... .......... .......... .......... 76% 25.5M 1s
 10950K .......... .......... .......... .......... .......... 76% 16.6M 1s
 11000K .......... .......... .......... .......... .......... 76% 21.0M 1s
 11050K .......... .......... .......... .......... .......... 77% 19.7M 1s
 11100K .......... .......... .......... .......... .......... 77% 17.1M 1s
 11150K .......... .......... .......... .......... .......... 77%  870K 1s
 11200K .......... .......... .......... .......... .......... 78% 12.8M 1s
 11250K .......... .......... .......... .......... .......... 78% 23.8M 1s
 11300K .......... .......... .......... .......... .......... 78% 16.4M 1s
 11350K .......... .......... .......... .......... .......... 79% 25.8M 1s
 11400K .......... .......... .......... .......... .......... 79% 20.4M 1s
 11450K .......... .......... .......... .......... .......... 79% 23.2M 1s
 11500K .......... .......... .......... .......... .......... 80% 15.0M 1s
 11550K .......... .......... .......... .......... .......... 80% 27.3M 1s
 11600K .......... .......... .......... .......... .......... 80% 16.6M 1s
 11650K .......... .......... .......... .......... .......... 81% 17.5M 1s
 11700K .......... .......... .......... .......... .......... 81% 25.4M 1s
 11750K .......... .......... .......... .......... .......... 81%  534K 1s
 11800K .......... .......... .......... .......... .......... 82% 16.4M 1s
 11850K .......... .......... .......... .......... .......... 82% 20.8M 1s
 11900K .......... .......... .......... .......... .......... 82% 20.8M 1s
 11950K .......... .......... .......... .......... .......... 83% 17.0M 1s
 12000K .......... .......... .......... .......... .......... 83% 20.9M 1s
 12050K .......... .......... .......... .......... .......... 84% 25.0M 1s
 12100K .......... .......... .......... .......... .......... 84% 16.9M 1s
 12150K .......... .......... .......... .......... .......... 84% 27.1M 1s
 12200K .......... .......... .......... .......... .......... 85% 14.9M 1s
 12250K .......... .......... .......... .......... .......... 85% 21.4M 0s
 12300K .......... .......... .......... .......... .......... 85% 17.4M 0s
 12350K .......... .......... .......... .......... .......... 86% 19.2M 0s
 12400K .......... .......... .......... .......... .......... 86%  865K 0s
 12450K .......... .......... .......... .......... .......... 86% 17.6M 0s
 12500K .......... .......... .......... .......... .......... 87% 25.4M 0s
 12550K .......... .......... .......... .......... .......... 87% 17.5M 0s
 12600K .......... .......... .......... .......... .......... 87% 14.4M 0s
 12650K .......... .......... .......... .......... .......... 88% 24.9M 0s
 12700K .......... .......... .......... .......... .......... 88% 17.6M 0s
 12750K .......... .......... .......... .......... .......... 88% 20.8M 0s
 12800K .......... .......... .......... .......... .......... 89% 20.8M 0s
 12850K .......... .......... .......... .......... .......... 89% 20.9M 0s
 12900K .......... .......... .......... .......... .......... 89% 21.0M 0s
 12950K .......... .......... .......... .......... .......... 90% 24.4M 0s
 13000K .......... .......... .......... .......... .......... 90%  532K 0s
 13050K .......... .......... .......... .......... .......... 90% 21.3M 0s
 13100K .......... .......... .......... .......... .......... 91% 17.0M 0s
 13150K .......... .......... .......... .......... .......... 91% 20.8M 0s
 13200K .......... .......... .......... .......... .......... 91% 17.4M 0s
 13250K .......... .......... .......... .......... .......... 92% 21.4M 0s
 13300K .......... .......... .......... .......... .......... 92% 20.9M 0s
 13350K .......... .......... .......... .......... .......... 93% 21.0M 0s
 13400K .......... .......... .......... .......... .......... 93% 20.9M 0s
 13450K .......... .......... .......... .......... .......... 93% 14.7M 0s
 13500K .......... .......... .......... .......... .......... 94% 20.4M 0s
 13550K .......... .......... .......... .......... .......... 94% 20.8M 0s
 13600K .......... .......... .......... .......... .......... 94% 32.3M 0s
 13650K .......... .......... .......... .......... .......... 95%  846K 0s
 13700K .......... .......... .......... .......... .......... 95% 12.5M 0s
 13750K .......... .......... .......... .......... .......... 95% 26.9M 0s
 13800K .......... .......... .......... .......... .......... 96% 17.3M 0s
 13850K .......... .......... .......... .......... .......... 96% 20.8M 0s
 13900K .......... .......... .......... .......... .......... 96% 25.3M 0s
 13950K .......... .......... .......... .......... .......... 97% 17.1M 0s
 14000K .......... .......... .......... .......... .......... 97% 26.0M 0s
 14050K .......... .......... .......... .......... .......... 97% 13.0M 0s
 14100K .......... .......... .......... .......... .......... 98% 26.4M 0s
 14150K .......... .......... .......... .......... .......... 98% 17.1M 0s
 14200K .......... .......... .......... .......... .......... 98% 26.8M 0s
 14250K .......... .......... .......... .......... .......... 99%  535K 0s
 14300K .......... .......... .......... .......... .......... 99% 20.6M 0s
 14350K .......... .......... .......... .......... .......... 99% 20.5M 0s
 14400K ..                                                    100% 55.8K=3.3s

2025-02-07 00:29:30 (4.26 MB/s) - ‘/Users/handcock/tmp/RtmpfOnA8K/filee63748f3bd19’ saved [14748457/14748457]

> reconstructions_total <- readRDS(tempFile_location)
> file.remove(tempFile_location)
[1] TRUE
> ls()
[1] "nsidc_data"            "reconstructions_total" "sie.m"                
[4] "tdate.m"               "tempFile_location"     "year.m"               
> 
> #=======================================================================
> # Gather parameters and vectors for jags run
> #=======================================================================
> 
> set.seed(2)
> 
> start <- 958
> end <- dim(reconstructions_total)[2]
> end
[1] 1495
> 
> tdate.m <- seq(1899+0.5/12,2025,by=1/12)[1:end]
> year.m <- trunc(tdate.m)
> month.m <- rep(1:12,150)[1:end]
> 
> year.m[month.m==1] <- year.m[month.m==1] - 1
> year.m[month.m==2] <- year.m[month.m==2] - 1
> 
> year.m[year.m < 1899] <- 1899
> 
> skip_run <- FALSE
> nsim <- 200
> nsim <- 2
> rs <- sample(1:2000, size=nsim, replace=FALSE)
> 
> for(sim in 1:nsim){
+ sie <- reconstructions_total[rs[sim],,1]
+ tdate <- tdate.m[seq_along(sie)]
+ month <- month.m[seq_along(sie)]
+ year <- year.m[seq_along(sie)]
+ 
+ start_satellite <- 1
+ end_data <- length(sie) # 2023/12 plus 2024/1 to 2024/8
+ 
+ beta_poly_order <- 5
+ beta_poly <- poly(seq(along=tdate[(start_satellite:end_data)]), beta_poly_order)
+ 
+ jags_data = list(
+             "sie" = sie[(start_satellite:end_data)],
+             "tdate" = tdate[(start_satellite:end_data)],
+             "mu_sigma" = c(log(0.5),rep(0, beta_poly_order)),
+             "mu_abeta1" = rep(0, beta_poly_order+1),
+             "tau_sigma" = diag(rep(0.5, beta_poly_order+1)),
+             "tau_abeta1" = diag(rep(0.5, beta_poly_order+1)),
+             "beta_basis" = cbind(rep(1, nrow(beta_poly)), beta_poly)
+                 )
+ #=======================================================================
+ # initialization
+ #=======================================================================
+ initfunction <- function(chain) {
+   return(switch(chain,
+                 "1" = list(
+                   .RNG.name="base::Super-Duper",
+                   .RNG.seed=1),
+                 "2" = list(
+                   .RNG.name="base::Super-Duper",
+                   .RNG.seed=2),
+                 "3" = list(
+                   .RNG.name="base::Super-Duper",
+                   .RNG.seed=3),
+                 ))
+ }
+ 
+ model_file <-
+ "model {
+ 
+   # Priors for population-level effects
+ 
+   int_1 ~ dt(0, 1/(3)^2, 3) 
+   sigma_0 ~ dnorm(0, 1) T(0.00001, )
+   sigmabeta ~ dmnorm(mu_sigma, tau_sigma)
+   abeta1 ~ dmnorm(mu_abeta1, tau_abeta1)
+   mbeta1 ~ dmnorm(0, 0.5)
+   ma1 ~ dunif(-1, 1)
+   ma2 ~ dunif(-1, 1)
+   ar2 ~ dunif(-1, 1)
+   ar3 ~ dunif(-1, 1)
+   ar10 ~ dunif(-1, 1)
+   ar20 ~ dunif(-1, 1)
+ 
+   # Apply autoregression to the residuals
+   mu_[1] = int_1
+   epsilon_[1] = sie[1]-mu_[1]
+   sigma[1] = exp(inprod(sigmabeta, beta_basis[1,])) +sigma_0
+   ar1[1] = inprod(abeta1, beta_basis[1,])
+ #
+   mu_[2] = int_1 + ar1[2] * sie[2 - 1] +
+                    ma1 * epsilon_[2 - 1]
+   epsilon_[2] = sie[2]-mu_[2]
+   sigma[2] = exp(inprod(sigmabeta, beta_basis[2,])) +sigma_0
+   ar1[2] = inprod(abeta1, beta_basis[2,])
+ #
+   for (i_ in 3:12) {
+     mu_[i_] = int_1 + ar1[i_] * sie[i_- 2] +
+                       ma1 * epsilon_[i_- 1]
+     epsilon_[i_] = sie[i_]-mu_[i_]
+     sigma[i_] = exp(inprod(sigmabeta, beta_basis[i_,])) +
+      (tdate[i_] >= 1978.9) * (tdate[i_] < 1987.72) * sigma_0 
+     ar1[i_] = inprod(abeta1, beta_basis[i_,])
+   }
+   for (i_ in 13:length(tdate)) {
+     sigma[i_] = exp(inprod(sigmabeta, beta_basis[i_,])) +
+      (tdate[i_] >= 1978.9) * (tdate[i_] < 1987.72) * sigma_0 
+     ar1[i_] = inprod(abeta1, beta_basis[i_,])
+     mu_[i_] = int_1 + 
+        ar1[i_] * sie[i_ -  1] + 
+        (tdate[i_] >= 1978.9) * (tdate[i_] < 1987.72) * ar10 * sie[i_ -  1] +
+        ar2 * sie[i_ -  4] + 
+        (tdate[i_] >= 1978.9) * (tdate[i_] < 1987.72) * ar20 * sie[i_ -  4] +
+        ar3 * sie[i_ -  12] + 
+        ma1 * epsilon_[i_ - 1] +
+        ma2 * epsilon_[i_ - 12]
+     epsilon_[i_] = sie[i_]-mu_[i_]
+   }
+ 
+   # Model and likelihood
+   for (i_ in 1:length(tdate)) {
+     # Likelihood and log-density for family = gaussian()
+     sie[i_] ~ dnorm(mu_[i_], 1 / sigma[i_]^2)  # SD as precision
+     loglik_[i_] = logdensity.norm(sie[i_], mu_[i_], 1 / sigma[i_]^2)  # SD as precision
+   }
+ }"
+ #=======================================================================
+ # Conditional setup
+ #=======================================================================
+ 
+ nChains <- 3
+ # Next for long run
+ nAdaptSteps <- 50000
+ nBurninSteps <- 100000
+ nThinSteps <- 200
+ nUseSteps <- 150000
+ 
+ # Next for simple run
+ nAdaptSteps <- 500
+ nBurninSteps <- 5000
+ nThinSteps <- 20
+ nUseSteps <- 500
+ 
+ jags_params <- c("abeta1",
+                  "mbeta1",
+                  "sigma",
+                  "ar1",
+                  "ar2",
+                  "ar3",
+                  "ar10",
+                  "ar20",
+                  "sigma_0",
+                  "ma1",
+                  "ma2",
+                  "loglik_"
+                 )
+ if(skip_run){
+   runJagsOut <- readRDS(file=paste0("../Data/Nature-COMMSENV-23-1836A-dynamic-ARIMA.",sim,".rds"))
+ } else {
+   runJagsOut <- run.jags(method = "parallel",
+                      model = model_file,
+                      monitor = jags_params,
+                      data = jags_data,
+                      n.chains = nChains,
+                      adapt = nAdaptSteps,
+                      burnin = nBurninSteps,
+                      sample = ceiling(nUseSteps/nChains),
+                      thin = nThinSteps,
+                      summarise = FALSE,
+                      plots = FALSE,
+                      inits = initfunction)
+   saveRDS(runJagsOut, file=paste0("../Data/Nature-COMMSENV-23-1836A-dynamic-ARIMA.",sim,".rds"))
+ }
+ 
+ #=======================================================================
+ # coda samples - MCMC
+ #=======================================================================
+ coda_samples <- as.mcmc.list(runJagsOut)
+ 
+ #=======================================================================
+ # combine mcmc draws for chains
+ #=======================================================================
+ get.posterior <- function(pars="ar1[", coda_samples, jags_data, chain=1:4) {
+     sin = NULL
+     sel <- grep(pars,dimnames(coda_samples[[chain[1]]])[[2]],fixed=TRUE)
+     for(ch in chain){
+       sin = rbind(sin, coda_samples[[ch]][,sel])
+     }
+     return(sin)
+ }
+ 
+ abeta1 <- get.posterior(pars="abeta1[", coda_samples, jags_data, chain=1:3)
+ 
+ # This code creates some simple plots
+ pdf(paste0("../Figures/Nature-COMMSENV-23-1836A-dynamic-ARIM.pdf",sep=""),paper="USr",width=11,height=9.5)
+ 
+ ar1 <- get.posterior(pars="ar1[", coda_samples, jags_data, chain=1:3)
+ ar10 <- get.posterior(pars="ar10", coda_samples, jags_data, chain=1:3)
+ B=apply(ar1,2,quantile,c(0.05,0.95))
+ dev.off()
+ pdf("../Figures/Nature-COMMSENV-23-1836A-dynamic-ARIMA-details.pdf",paper="USr",width=11,height=9.5)
+ range(jags_data$tdate)
+ plot(x=jags_data$tdate, y=sie,type='l',xlab="Time (years)",ylab="SIE",
+      xlim=c(1900,2025), main="nsidc combined", lwd=3, xaxt="n")
+ plot(x=jags_data$tdate, y=jags_data$sie,type='l',xlab="Time (years)",ylab="SIE",
+      xlim=c(1900,2025), main="sie standardized", lwd=3, xaxt="n")
+ vl <- length(apply(ar1,2,mean))
+ plot(x=jags_data$tdate, y=apply(ar1,2,mean)[ncol(ar1)+1-(vl:1)],type='l',xlab="Time (years)",ylab="AR(1) coefficient",ylim=c(min(B[1,]),max(B[2,])),
+      xlim=c(1900,2025), main="", lwd=3, xaxt="n")
+ lines(x=jags_data$tdate, y=B[1,ncol(ar1)+1-(vl:1)],col=2,lty=2, lwd=3)
+ lines(x=jags_data$tdate, y=B[2,ncol(ar1)+1-(vl:1)],col=2,lty=2, lwd=3)
+ abline(h=1, lty=1, col="gray")
+ axis(1, at=c(seq(1900, 2020, by=5), 2024))
+ abline(h=0, lty=1, col="gray")
+ abline(v=c(1978.9, 1987.9, 2020, 2024.8), lty=1, col="gray")
+ #
+ ar1a <- apply(ar1,2,mean)[ncol(ar1)+1-(vl:1)]
+ ar1a[(tdate >= 1978.9) & (tdate < 1987.72) ] <- ar1a[(tdate >= 1978.9) & (tdate < 1987.72) ] + mean(ar10)
+ plot(x=jags_data$tdate, y=ar1a,type='l',xlab="Time (years)",ylab="AR(1) coefficient",ylim=c(min(B[1,]),max(B[2,])),
+      xlim=c(1900,2025), main="", lwd=3, xaxt="n")
+ lines(x=jags_data$tdate, y=B[1,ncol(ar1)+1-(vl:1)],col=2,lty=2, lwd=3)
+ lines(x=jags_data$tdate, y=B[2,ncol(ar1)+1-(vl:1)],col=2,lty=2, lwd=3)
+ abline(h=1, lty=1, col="gray")
+ axis(1, at=c(seq(1900, 2020, by=5), 2024))
+ abline(h=0, lty=1, col="gray")
+ abline(v=c(1978.9, 1987.9, 2020, 2024.8), lty=1, col="gray")
+ #dev.off()
+ print(mean(ar10))
+ 
+ sigma <- get.posterior(pars="sigma[", coda_samples, jags_data, chain=1:3)
+ B=apply(sigma,2,quantile,c(0.05,0.95))
+ plot(x=jags_data$tdate, y=apply(sigma,2,mean),type='l',xlab="date",ylab="sigma",
+      main="Standard deviation",  xlim=c(1978,2025))
+ lines(x=jags_data$tdate, y=B[1,],col=3,lty=2)
+ lines(x=jags_data$tdate, y=B[2,],col=3,lty=2)
+ 
+ #=======================================================================
+ # Plots
+ #=======================================================================
+ 
+ plot.trace.param.vec <- function(coda_samples, params, labels) {
+     npar <- length(params)
+     max_par <- 6
+     if(npar > max_par){
+         if((npar %% max_par) == 1) {
+             max_par <- max_par - 1
+         }
+         par_chunks <- split(params, ceiling(seq_along(params)/max_par))
+         lab_chunks <- split(labels, ceiling(seq_along(labels)/max_par))
+         for(i in 1:length(par_chunks)){
+             plot.trace.param.vec(coda_samples, par_chunks[[i]], lab_chunks[[i]])
+         }
+         return(NA)
+     }
+     posterior <- as.matrix(coda_samples[,params])
+     plots <- list(NA)
+     cur_plot=1
+     for(i in 1:npar){
+         pars <- c(params[i], params[i])
+         plots[[cur_plot]] <- mcmc_trace(posterior[, c(i, i)], pars=pars)
+             labs(y=labels[i])
+         cur_plot<-cur_plot+1
+         plots[[cur_plot]] <- mcmc_areas(posterior[, c(i,i)],
+                                         pars=pars,
+                                         prob = 0.8) +
+             labs(y=labels[i]) + yaxis_text(on=FALSE)
+         cur_plot<-cur_plot+1
+     }
+     if(npar < 6) {
+         for(i in (npar+1):6) {
+             for(j in 1:2){
+                 plots[[cur_plot]] <- grid.rect(gp=gpar(col="white"))
+                 cur_plot<-cur_plot+1
+             }
+         }
+     }
+     do.call("grid.arrange", c(plots, ncol=2))
+ }
+ 
+ plot.intervals.param.vec <- function(coda_samples, params) {
+     posterior <- as.matrix(coda_samples[,params]) 
+     mcmc_intervals(posterior)
+ }
+ 
+ plot.cin.errbar <- function(coda_samples, jags_data, chain=1, minmax=FALSE) {
+     c_post <- get.cin.posterior(coda_samples, jags_data, chain)
+     if(minmax) {
+         probs <- c(0, .5, 1)
+         title <- "Median with Min and Max values"
+         df_q <- as.data.frame(colQuantiles(c_post, probs=probs)) %>%
+             setNames(c("Lower", "Median", "Upper"))
+     } else {
+         sds <- colSds(c_post)
+         meds <- colQuantiles(c_post, probs=c(0.5))
+         df_q <- as.data.frame(cbind(meds-1.96*sds, meds, meds+1.96*sds)) %>%
+             setNames(c("Lower", "Median", "Upper"))
+         probs <- c(.05, .5, .95)
+         title <- "Median +/- 1.96*std deviation"
+     }
+     ggplot(df_q, aes(x=row.names(df_q), y=Median)) +
+         geom_point(size=2) +
+         geom_errorbar(aes(ymin=Lower, ymax=Upper)) +
+         scale_x_discrete(limits=c(1:dim(df_q)[1])) + 
+         labs(x="Lag (Days)", y="Coefficient",
+              title=title)
+ }
+  
+ #-----------------------------------------------------------------------
+ ## MCMC diagnostics
+ #-----------------------------------------------------------------------
+ 
+ pdf("../Figures/Nature-COMMSENV-23-1836A-dynamic-ARIMA-mcmc_plots.pdf")
+ 
+ # Plot beta posterior
+ params <- c(sprintf("abeta1[%d]", c(1:beta_poly_order)), sprintf("mbeta1[%d]", c(1:1)), "sigma[527]")
+ params <- c(sprintf("abeta1[%d]", c(1:beta_poly_order)), "mbeta1", "sigma[527]", "ar2", "ar3", "ar10", "ar20", "ma1", "ma2","sigma_0")
+ labels <- params
+ plot.intervals.param.vec(coda_samples, params)
+ plot.trace.param.vec(coda_samples, params, labels)
+ 
+ dev.off()
+ 
+ pdf("../Figures/Nature-COMMSENV-23-1836A-dynamic-ARIMA-loo.pdf")
+ # Model comparison
+ ll <- get.posterior(pars="loglik_", coda_samples, jags_data, chain=1:3)
+ gc <- rep(1:3,sapply(coda_samples, nrow))
+ r_eff <- loo::relative_eff(x = exp(ll), chain_id=gc)
+ loo.m <- loo::loo(ll, r_eff = r_eff, save_psis = FALSE)         
+ plot(loo.m)
+ loo.m
+ saveRDS(loo.m, file=paste0("../Data/Nature-COMMSENV-23-1836A-dynamic-ARIMA-loo_",sim,".rds"))
+ } # end of foreach loop
Calling 3 simulations using the parallel method...
Following the progress of chain 1 (the program will wait for all chains
to finish before continuing):
Welcome to JAGS 4.3.1 (official binary) on Fri Feb  7 00:29:31 2025
JAGS is free software and comes with ABSOLUTELY NO WARRANTY
Loading module: basemod: ok
Loading module: bugs: ok
. . Reading data file data.txt
. Compiling model graph
   Resolving undeclared variables
   Allocating nodes
Graph information:
   Observed stochastic nodes: 1495
   Unobserved stochastic nodes: 11
   Total graph size: 40411
. Reading parameter file inits1.txt
. Initializing model
. Adapting 500
-------------------------------------------------| 500
++++++++++++++++++++++++++++++++++++++++++++++++++ 100%
Adaptation successful
. Updating 5000
-------------------------------------------------| 5000
************************************************** 100%
. . . . . . . . . . . . . Updating 3340
-------------------------------------------------| 3300
************************************************** 99%
* 100%
. . . . Updating 0
. Deleting model
. 
All chains have finished
Simulation complete.  Reading coda files...
Coda files loaded successfully
Finished running the simulation
[1] 0.08850326
Calling 3 simulations using the parallel method...
Following the progress of chain 1 (the program will wait for all chains
to finish before continuing):
Welcome to JAGS 4.3.1 (official binary) on Fri Feb  7 00:31:31 2025
JAGS is free software and comes with ABSOLUTELY NO WARRANTY
Loading module: basemod: ok
Loading module: bugs: ok
. . Reading data file data.txt
. Compiling model graph
   Resolving undeclared variables
   Allocating nodes
Graph information:
   Observed stochastic nodes: 1495
   Unobserved stochastic nodes: 11
   Total graph size: 40411
. Reading parameter file inits1.txt
. Initializing model
. Adapting 500
-------------------------------------------------| 500
++++++++++++++++++++++++++++++++++++++++++++++++++ 100%
Adaptation successful
. Updating 5000
-------------------------------------------------| 5000
************************************************** 100%
. . . . . . . . . . . . . Updating 3340
-------------------------------------------------| 3300
************************************************** 99%
* 100%
. . . . Updating 0
. Deleting model
. 
All chains have finished
Simulation complete.  Reading coda files...
Coda files loaded successfully
Finished running the simulation
[1] 0.04252747
Warning message:
The adaptation phase of one or more models was not completed in 500 iterations, so the current samples may not be optimal - try increasing the number of iterations to the "adapt" argument 
> 
> proc.time()
   user  system elapsed 
 13.802   1.660 249.723 
